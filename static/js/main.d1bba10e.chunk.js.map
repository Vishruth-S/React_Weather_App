{"version":3,"sources":["Assets/imgs/svgs sync /^/.*/.svg$","Assets/imgs/svgs/cloudDay.svg","Assets/imgs/svgs/cloudNight.svg","Assets/imgs/svgs/fog.svg","Assets/imgs/svgs/moon.svg","Assets/imgs/svgs/rainDay.svg","Assets/imgs/svgs/rainNight.svg","Assets/imgs/svgs/snow.svg","Assets/imgs/svgs/sun.svg","containers/SearchForm/SearchForm.js","containers/WeatherDisplay/WeatherDisplay.js","containers/Error/Error.js","containers/Weather/Weather.js","containers/UI/Navbar.js","containers/UI/Footer.js","containers/App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SearchForm","props","autoComplete","onSubmit","submitHandler","className","onChange","inputChangeHandler","type","placeholder","aria-label","required","Weather","disp","errdisplay","data","temp","background","style","display","location","day","time","src","require","alt","weatherMain","high","low","humidity","cloud","icon","faWind","windSpeed","message","state","search","errmessage","setState","target","value","preventDefault","trackPromise","axios","get","then","res","ts","weathermain","current","condition","text","tempr","Math","round","parseInt","temp_c","name","forecast","forecastday","maxtemp_c","mintemp_c","gust_kph","localtime","date","slice","time24Not","time24","H","substr","h","ampm","calculate_time","dayName","Date","getDay","monthname","getMonth","calculate_day","codestr","str","daynight","includes","background_calculate","catch","err","console","log","response","errormsg","error","this","errdisp","Component","Navbar","href","title","border","Footer","LoadingIndicator","usePromiseTracker","promiseInProgress","color","height","width","timeout","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1bba10e.chunk.js","sourcesContent":["var map = {\n\t\"./cloudDay.svg\": 83,\n\t\"./cloudNight.svg\": 84,\n\t\"./fog.svg\": 85,\n\t\"./moon.svg\": 86,\n\t\"./rainDay.svg\": 87,\n\t\"./rainNight.svg\": 88,\n\t\"./snow.svg\": 89,\n\t\"./sun.svg\": 90\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 82;","module.exports = __webpack_public_path__ + \"static/media/cloudDay.eb5ccd91.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudNight.bfb351b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.66927525.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon.644849c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainDay.6b26f41e.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainNight.447a97d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.06848045.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun.255a951b.svg\";","import React from 'react'\r\nimport './SearchForm.css'\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\n\r\nconst SearchForm = (props) => {\r\n    return (\r\n        <div>\r\n            {/* <form onSubmit={props.submitHandler}> \r\n                <input onChange={props.inputChangeHandler} />\r\n                <button type='submit' >Submit</button>\r\n            </form> */}\r\n            {/* <form autoComplete=\"false\" onSubmit={props.submitHandler} className=\"search-bar\">\r\n                <input onChange={props.inputChangeHandler} type=\"search\" autoComplete=\"off\" name=\"search\" pattern=\".*\\S.*\" placeholder=\"Enter a location\" required />\r\n                <button className=\"search-btn\" type=\"submit\">\r\n                    <span>Search</span>\r\n                </button>\r\n            </form> */}\r\n            <form autoComplete=\"false\" onSubmit={props.submitHandler} className=\"form-inline search-bar\">\r\n                <input onChange={props.inputChangeHandler} autoComplete=\"off\" className=\"search-input\" type=\"search\" placeholder=\"Enter a location\" aria-label=\"Search\" required/>\r\n                <button className=\"search-btn\" type=\"submit\"><i className=\"fa fa-search\"></i></button>\r\n            </form>\r\n \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React from 'react'\r\nimport './WeatherDisplay.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faWind } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Weather = (props) => {\r\n    let disp = \"none\"\r\n    if (props.errdisplay === \"block\" || !props.data.temp) {\r\n        disp = \"none\"\r\n    } else {\r\n        disp = \"block\"\r\n    }\r\n    return (\r\n        <div className={props.data.background + \" weather-main\"} style={{ display: disp }}>\r\n            <div className=\"location\">\r\n                {props.data.location}\r\n            </div>\r\n            <div className=\"day\">\r\n                {props.data.day}\r\n            </div>\r\n            <div className=\"time\">\r\n                {props.data.time}\r\n            </div>\r\n            <div className=\"container descWrap\">\r\n                <div className=\"desc\">\r\n                    <div>\r\n                        {/* {props.data.background ? <img src={require('../../Assets/imgs/'+props.data.background+\".png\")} alt=\" \" /> : null} */}\r\n                        {props.data.background ? <img src={require(`../../Assets/imgs/svgs/${props.data.background}.svg`)} alt=\" \" className='filter-white svgs' /> : null}\r\n                        <div className=\"weatherText\">{props.data.weatherMain}</div>\r\n                    </div>\r\n                    {/* <img src = {svg} className='filter-white'/> */}\r\n                </div>\r\n                <div className=\"tempMainCol\">\r\n                    {props.data.temp}<span className=\"celsiusMain\">C</span>\r\n                </div>\r\n                <div className=\"tempSubCol\">\r\n                    <div>\r\n                        {/* <span>&#8593; </span> */}\r\n                        {props.data.high}<span className=\"celsius\">C</span>\r\n                        {/* <span>    &#8595; </span> */}\r\n                        <span> / </span>{props.data.low}<span className=\"celsius\">C</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row items\">\r\n                <div className=\"col-4\">\r\n                    <i className=\"fa fa-tint\"></i><span> {props.data.humidity}%</span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <i className=\"fa fa-cloud\"></i><span> {props.data.cloud}%</span>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <FontAwesomeIcon icon={faWind} />\r\n                    <span> {props.data.windSpeed}km/h</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <section>\r\n                <div className=\"wave wave1\"></div>\r\n                <div className=\"wave wave2\"></div>\r\n                <div className=\"wave wave3\"></div>\r\n                <div className=\"wave wave4\"></div>\r\n            </section> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\n\r\nimport './Error.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Error = (props) => {\r\n    // console.log(props.errdisplay)\r\n    return (\r\n        <div style={{display: props.errdisplay}} className=\"errordiv\">\r\n            <p><i className=\"fa fa-search-minus mr-2\"></i>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { trackPromise } from 'react-promise-tracker';\r\n\r\nimport SearchForm from '../SearchForm/SearchForm'\r\nimport WeatherDisplay from '../WeatherDisplay/WeatherDisplay'\r\nimport Error from '../Error/Error'\r\nimport './Weather.css'\r\n\r\nclass Weather extends Component {\r\n  state = {\r\n    search: '',\r\n    time: '',\r\n    day: '',\r\n    location: null,\r\n    weatherMain: null,\r\n    temp: false,\r\n    humidity: null,\r\n    high: null,\r\n    low: null,\r\n    windSpeed: null,\r\n    cloud: null,\r\n    errmessage: false,\r\n    icon: '',\r\n    background: '',\r\n  }\r\n\r\n  inputChangeHandler = (e) => {\r\n    this.setState({\r\n      search: e.target.value\r\n    })\r\n  }\r\n  submitHandler = (e) => {\r\n    e.preventDefault();  // It will hold the form submit\r\n    // console.log('state:', this.state.search);\r\n    const calculate_day = (date) => {\r\n      let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n      let d = new Date(date);\r\n      let dayName = days[d.getDay()];\r\n      let month_name = function (dt) {\r\n        let mlist = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n        return mlist[dt.getMonth()];\r\n      };\r\n      // console.log(month_name(new Date(date)));\r\n      let monthname = month_name(new Date(date));\r\n      let day = dayName + \",\" + date.slice(8, 10) + \" \" + monthname;\r\n      return day\r\n    }\r\n    const calculate_time = (time24) => {\r\n      // console.log(time24)\r\n      var ts = time24;\r\n\r\n      // console.log(ts)\r\n      var H = +ts.substr(0, 2);\r\n      // console.log(H)\r\n      var h = (H % 12) || 12;\r\n      h = (h < 10) ? (\"0\" + h) : h;  // leading 0 at the left for 1 digit hours\r\n      // console.log(h)\r\n      var ampm = H < 12 ? \" AM\" : \" PM\";\r\n      ts = h + ts.substr(2, 3) + ampm;\r\n      // console.log(ts)\r\n      return ts;\r\n    }\r\n\r\n    const background_calculate = (codestr, time) => {\r\n      let str = time[0] + time[1]\r\n      str = parseInt(str)\r\n      // console.log(str)\r\n      let daynight = str >= 6 && str <= 19 ? \"day\" : \"night\";\r\n      // console.log(daynight)\r\n      let code = parseInt(codestr)\r\n      if (code === 1000) {\r\n        if (daynight === \"day\")\r\n          return \"sun\"\r\n        else\r\n          return \"moon\"\r\n      }\r\n      if (code === 1003 || code === 1006 || code === 1009) {\r\n        if (daynight === \"day\")\r\n          return \"cloudDay\"\r\n        return \"cloudNight\"\r\n      }\r\n      if (code === 1030 || code === 1135 || code === 1147) {\r\n        return \"fog\"\r\n      }\r\n      let arr = [1063, 1176, 1087, 1276, 1201, 1150, 1240, 1273, 1186, 1189, 1153, 1168, 1171, 1180, 1183, 1185, 1243, 1195];\r\n      if (arr.includes(code)) {\r\n        if (daynight === \"day\")\r\n          return \"rainDay\"\r\n        return \"rainNight\"\r\n      }\r\n      return \"snow\"\r\n    }\r\n\r\n    const indent_time = (ts) => {\r\n      if (ts[1] === \":\") {\r\n        ts = \"0\" + ts;\r\n      }\r\n      return ts\r\n    }\r\n\r\n    trackPromise(axios.get('http://api.weatherapi.com/v1/forecast.json?key=d0c1e9b30aef451789b152051200907&q=' + this.state.search + \"&days=3\")\r\n      .then(res => {\r\n        // console.log(res);\r\n        const weathermain = res.data.current.condition.text;\r\n        const tempr = Math.round(parseInt(res.data.current.temp_c)) + \"\\xB0\";\r\n        const location = res.data.location.name;\r\n        const humidity = res.data.current.humidity;\r\n        const high = Math.round(parseInt(res.data.forecast.forecastday[0].day.maxtemp_c)) + \"\\xB0\";\r\n        const low = Math.round(parseInt(res.data.forecast.forecastday[0].day.mintemp_c)) + \"\\xB0\";\r\n        const cloud = res.data.current.cloud;\r\n        const windSpeed = Math.round(parseInt(res.data.current.gust_kph));\r\n        const icon = res.data.current.condition.icon;\r\n        const localtime = res.data.location.localtime;\r\n        const date = localtime.slice(0, 10);\r\n        const time24Not = localtime.slice(11, 16);\r\n        const time24 = indent_time(time24Not);\r\n\r\n        const time = calculate_time(time24);\r\n        const day = calculate_day(date);\r\n        const code = res.data.current.condition.code;\r\n        const background = background_calculate(code, time24);\r\n        this.setState({\r\n          errmessage: false,\r\n          weatherMain: weathermain,\r\n          temp: tempr,\r\n          location: location,\r\n          humidity: humidity,\r\n          icon: icon,\r\n          high: high,\r\n          low: low,\r\n          windSpeed: windSpeed,\r\n          cloud: cloud,\r\n          time: time,\r\n          day: day,\r\n          background: background,\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err.response.data)\r\n        let errormsg = err.response.data.error.message;\r\n        // console.log(errormsg);\r\n        this.setState({\r\n          errmessage: errormsg,\r\n          temp: false,\r\n        })\r\n\r\n      }))\r\n  };\r\n\r\n  render() {\r\n    let disp = this.state.errmessage ? \"none\" : \"block\"\r\n    let errdisp = this.state.errmessage ? \"block\" : \"none\"\r\n    return (\r\n      <div>\r\n        {/* <h2>Weather</h2> */}\r\n        <SearchForm inputChangeHandler={this.inputChangeHandler} submitHandler={this.submitHandler} />\r\n        <WeatherDisplay display={disp} data={this.state} errdisplay={errdisp} />\r\n        <Error errdisplay={errdisp} message={this.state.errmessage} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Weather","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Navbar.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light mb-3\">\r\n            <span className=\"navbar-brand mb-0 h1\"><a href=\"https://www.weatherapi.com/\" title=\"Free Weather API\"><img src='//cdn.weatherapi.com/v4/images/weatherapi_logo.png' alt=\"Weather data by WeatherAPI.com\" border=\"0\" className=\"logo\" /></a></span>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p className=\"footer-text\">Designed and Developed by <a href=\"https://vishruth-s.github.io/Me/\">VS</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport './App.css'\r\nimport Weather from './Weather/Weather'\r\nimport Navbar from '../containers/UI/Navbar'\r\nimport Footer from './UI/Footer'\r\n\r\nconst LoadingIndicator = props => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n  return (\r\n      promiseInProgress && \r\n      <Loader\r\n         type=\"Rings\"\r\n         color=\"#71b62b\"\r\n         height={100}\r\n         width={100}\r\n         timeout={3000} //3 secs\r\n         className=\"Loading-icon\"\r\n      />\r\n  );  \r\n}\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n      <div className=\"main\">\r\n        <Navbar />\r\n        <Weather/>\r\n        <LoadingIndicator/>\r\n        <Footer />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}